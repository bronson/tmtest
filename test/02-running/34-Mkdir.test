# Like 33-Mkdir.test, except ensures that the directory won't
# be deleted if it is not empty.



dn=`mktemp -d -t`

cd "$TESTDIR"
$tmtest $cfg -q - <<-EOL | sed 's/MKDIR: .* was not empty/MKDIR: TMPDIR was not empty/'

	# normally we run tests in pedantic mode, where any single error
	# will cause the test to bail and return a nonzero result code.
	# In this case, though, we are intentionally causing an error.
	# Since we don't want the platform-specific result code in the
	# test results, we turn off errorexit.
	set +e

	MKDIR sdn '$dn'

	echo start
	cd '$dn'
	touch obdurate && echo mid
	echo end

	# Error messages are very platform-specific.  We'll suppress
	# the "Directory not empty" message  that would normally be
	# printed to stderr by the ATEXIT routine.  The supertest will
	# verify that the directory indeed failed to be deleted.
	exec 2>/dev/null


	STDOUT:
	start
	mid
	end
EOL


# Ensure that the directory was properly deleted by the subtest.
echo
if [ -d "$dn" ]; then
	echo "Dir still exists after test ran.  Good."
else
	echo "DIRECTORY WAS SUCCESSFULLY DELETED!!??"
fi

rm "$dn/obdurate"
rmdir "$dn"

if [ ! -d "$dn" ]; then
	echo "Directory was successfully deleted."
else
	echo "DIR $dn STILL EXISTS!!!"
fi


STDOUT:
ABRT (STDIN)                   MKDIR: TMPDIR was not empty, cant delete it!

1 test run, 0 successes, 1 failure.

Dir still exists after test ran.  Good.
Directory was successfully deleted.
