title: 	Multiple Executables
author:	Scott Bronson
date: 	21 July 2004

desc:	Ensure that we handle multiple executables in the executable header properly.

interpolate: header.conf


# First we create the command to run.

exec.echo: execfile = <<EOL
#!/bin/sh
echo one $*
EOL


# Then create the config file that calls it.

header.conf: file = <<EOL
executable: echo1=$(exec.echo) echo2=$(exec.echo)
EOL


# Now, run tmtest.  If everything works, it should run the fabricated
# command in /tmp, rather than the built-in echo.

tmtest -o -f $(header.conf) - <<EOL
echo1 potato!
echo2 and only one
------ STDOUT: exit code 0 - no error
one potato!
one and only one
EOL


------ STDOUT: exit code 0 - no error
echo1 potato!
echo2 and only one
------ STDOUT: exit code 0 - no error
one potato!
one and only one
