Create tests:

Handle running a test specified with an absolute path
Handle running a test specified with a relative path in cwd.
Handle running a test specified in a child dir.

Calling with unkown switches, both short and long.
Not specifying values for switches that take values.
Naming the test on the command line
Naming a dir on the command line
Naming a file that doesn't end in ".test" on the command line.
Tests that fail before they're run (bad config files)
Tests that fail to run (syntax error)
Try running a testfile whose name contains a single quote.
Disabling an entire directory using a config file.
Test that both raw and modified work when stdout doesn't have a newline.

2.0:
- Make diff work in subdirs (need to cd back to superdir before
  forking, and use the proper partial path for the file)
- Ensure that diffing and patching works when running multiple tests in multiple dirs.
- figure out whether to call it MODIFY or EACHLINE.  clean up the syntax.
- get rid of all the exit(10) calls in test.c.  We need a better way to abort the test.
  should get rid of a whole bunch in main.c as well.
  this should prevent us from dropping turds in /tmp all the time.
- Rewrite the test date and author if they aren't supplied.
- should probably indent stdout and stderr clauses two spaces.  otherwise
  we might misinterpret STDOUT: and STDERR: in a stdout or stderr clause.
- Shouldn't run every test in a dir if the DISABLED directive is in a config file.
  Should discover what dir the DISABLED directive came from and refuse
  to run anything above that.

2.2:
- Add the ability to run multiple tests from one testfile
- Change the I/O scheme to be event based.  Get rid of the tempfiles.
  Convert to using the async io library.  Don't use temporary files.
  This would allow us to recognize that the test is disabled before
     producing a partial diff, thus saving the user from blowing away his files.
- Unify the line modifier in compare.c and test.c.
- allow multiple s/// expressions on a single line.  will probably require modifications to pcrs_compile_command, so make it support buf/len at the same time.
- add the ability to run valgrind over each test and print success/failure of that.
- add gcov support so you can see what sort of coverage your tests provide.
?:
- Provide some sort of XML output.
- it's stupid to dup the str just to null-terminate it so it can be passed to pcrs.
  modify pcrs to compile buffers too.

????:
- There should be a way to repeatedly run a single test with only tiny
  differences.  i.e. test all permeutations of DISABLE DISABLE:
  DISABLED DISABLED:  Hopefully that will clean up 05-08-Disable/Abort.test
- There should be a way of discovering that you copied a file and changed
  its functionality.  that way, tmtest will update its author and date.
- Add a timeout that will terminate stalled tests.  You can set the timeout in the config file.



- Wow, the pcrs error messages suck.  Is there any way to improve them?
  "(pcrs:) Syntax error while parsing command (-11)."


maybe never:
- add a CLEAR_EACHLINE or CLEAR_MODIFY option to to turn off all substitutions.
  It would be easy to do.  I'm just not convinced that anyone would find it useful.

